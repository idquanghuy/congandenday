{{> header }}
{{> navbar }}
<style>
    @media (min-width: 1280px) {
        .container {
            max-width: 1350px !important;
        }
    }
</style>
<main class="container">
    <div class="mainbar"></div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <img src="../assets/images/photos/history-book.png" alt="" style="width: 30px">
                        Lịch Sử Giao Dịch
                    </h3>
                    <div class="card-options">
                        <form action="" method="get" id="formPage">
                            <div class="input-group">
                                <select name="perPage" class="form-control form-control-sm"
                                    onchange="$('#formPage').submit();">
                                    {{#select perPage}}
                                    <option value="10">10</option>
                                    <option value="20">20</option>
                                    <option value="30">30</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                    <option value="200">200</option>
                                    <option value="500">500</option>
                                    <option value="1000">1000</option>
                                    {{/select}}
                                </select>
                                <span class="input-group-btn ml-2">
                                    <button type="button" class="btn btn-sm btn-danger action-history" data-action="remove-all">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </button>
                                </span>
                            </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="" class="form-label">Trò Chơi</label>
                                <select name="gameType" class="form-control">
                                    <option value="">Tất Cả</option>
                                    {{#each games}}
                                    <option value="{{ this.gameType }}">{{ this.name }}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="" class="form-label">Loại</label>
                                <select name="io" class="form-control">
                                    {{#select io}}
                                    <option value="">Tất Cả</option>
                                    <option value="-1">Trừ Tiền</option>
                                    <option value="1">Nhận Tiền</option>
                                    {{/select}}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="" class="form-label">Trạng Thái</label>
                                <select name="status" class="form-control">
                                    {{#select status}}
                                    <option value="">Tất Cả</option>
                                    <option value="wait">Đợi Xử Lý</option>
                                    <option value="transfer">Chuyển Tiền</option>
                                    <option value="recharge">Rút Tiền</option>
                                    <option value="errorComment">Sai Nội Dung</option>
                                    <option value="limitRefund">Giới Hạn Hoàn</option>
                                    <option value="limitBet">Sai Hạn Mức</option>
                                    <option value="refund">Đã Hoàn Tiền</option>
                                    <option value="waitReward">Đợi Trả Thưởng</option>
                                    <option value="waitRefund">Đợi Hoàn Tiền</option>
                                    <option value="win">Thắng Cược</option>
                                    <option value="won">Thua Cược</option>
                                    <option value="errorMoney">Không Đủ Tiền</option>
                                    <option value="limitPhone">Giới Hạn Số</option>
                                    <option value="errorPhone">Lỗi Số</option>
                                    <option value="phoneBlock">Đã Chặn Số</option>
                                    <option value="error">Tất Cả Lỗi</option>
                                    {{/select}}
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row gutters-xs">
                            <div class="col">
                                <input type="text" name="search" class="form-control" value="{{ search }}"
                                    placeholder="Nhập nội dung tìm kiếm....">
                            </div>
                            <span class="col-auto">
                                <button class="btn btn-primary">
                                    <i class="fa fa-search"></i>
                                </button>
                                <a href="..{{ originalUrl.pathname }}" class="btn btn-light text-danger">
                                    <i class="fas fa-times-circle"></i>
                                </a>
                            </span>
                        </div>
                    </div>
                    </form>
                    <div class="table-responsive table-mousewheel mb-3">
                        <table
                            class="table card-table table-vcenter text-nowrap table-bordered table-striped text-center">
                            <thead class="badge-primary text-white">
                                <tr>
                                    <th></th>
                                    <th class="text-white">Loại</th>
                                    <th class="text-white">Mã Giao Dịch</th>
                                    <th class="text-white">Số Điện Thoại</th>
                                    <th class="text-white">Trò Chơi</th>
                                    <th class="text-white">Tiền Nhận</th>
                                    <th class="text-white">Nội Dung</th>
                                    <th class="text-white">Tiền Thưởng</th>
                                    <th class="text-white">Số Dư Cuối</th>
                                    <th class="text-white">Trạng Thái</th>
                                    <th class="text-white">Mô Tả</th>
                                    <th class="text-white">Người Chuyển</th>
                                    <th class="text-white">Người Nhận</th>
                                    <th class="text-white">Thời Gian</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each list}}
                                <tr class="edit-one" data-id="{{ this._id }}" data-_id="{{ this.transId }}">
                                    <td>
                                        <span class="badge badge-info hand action-history" data-action="edit"
                                            data-id="{{ this._id }}"><i class="fas fa-pen"></i></span>
                                        <span class="badge badge-warning action-history hand" data-id="{{ this._id }}"
                                            data-action="rework" data-toggle="tooltip" data-placement="top" title="" data-original-title="Trả thưởng lại"><i class="fas fa-trophy-alt"></i></span>
                                        <span class="badge badge-danger hand action-history" data-action="remove"
                                            data-id="{{ this._id }}"><i class="fas fa-trash"></i></span>
                                    </td>
                                    <td>{{#ifCond this.io '==' 1}}<span class="badge badge-success">Nhận
                                            Tiền</span>{{else}}<span class="badge badge-danger">Trừ
                                            Tiền</span>{{/ifCond}}</td>
                                    <td><span class="badge badge-info">{{ this.transId }}</span></td>
                                    <td class="phone">{{ this.phone }}</td>
                                    <td>{{#if this.gameName}}<span class="badge badge-dark">{{ this.gameName
                                            }}</span>{{else}}<span class="badge badge-secondary">Không Rõ</span>{{/if}}
                                    </td>
                                    <td>{{ numberFormat this.money }}đ</td>
                                    <td class="comment"><textarea class="form-control">{{ this.comment }}</textarea>
                                    </td>
                                    <td>{{ numberFormat this.bonus }}đ</td>
                                    <td>{{ numberFormat this.postBalance }}đ</td>
                                    <td class="status">{{{ historyStatus this.status }}}</td>
                                    <td><textarea class="form-control">{{ this.description }}</textarea></td>
                                    <td>{{ this.partnerId }}</td>
                                    <td>{{ this.targetId }}</td>
                                    <td>{{ formatDate this.updatedAt 'YYYY-MM-DD HH:mm:ss' }}</td>
                                </tr>
                                {{else}}
                                <tr>
                                    <td colspan="24">
                                        <div class="text-center">
                                            <img src="../assets/images/photos/404.png">
                                            <p class="font-weight-bold">Không tìm thấy dữ liệu...</p>
                                        </div>
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                    </div>
                    <div class="mb-3">
                        <ul class="pagination-container">
                            {{#paginate pagination type="previous"}}
                            <li {{#if disabled}}class="page-item page-prev disabled" {{/if}}>
                                <a class="page-link"
                                    href="{{ baseURL }}?{{#if query }}{{ query }}&page={{n}}{{else}}page={{n}}{{/if}}">Prev</a>
                            </li>
                            {{/paginate}}
                            {{#paginate pagination type="middle" limit=pagination.limit}}
                            <li {{#if active}}class="page-item active" {{/if}}>
                                <a class="page-link"
                                    href="{{ baseURL }}?{{#if query }}{{ query }}&page={{n}}{{else}}page={{n}}{{/if}}">{{n}}</a>
                            </li>
                            {{/paginate}}
                            {{#paginate pagination type="next"}}
                            <li {{#if disabled}}class="page-item page-next disabled" {{/if}}>
                                <a class="page-link"
                                    href="{{ baseURL }}?{{#if query }}{{ query }}&page={{n}}{{else}}page={{n}}{{/if}}">Next</a>
                            </li>
                            {{/paginate}}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalRework" tabindex="-1" role="dialog" aria-labelledby="modelTitleId"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Trả Thưởng Giao Dịch <b id="transId" class="text-primary">#</b></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="" method="post" id="formRework">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="" class="form-label">Mã Giao Dịch</label>
                            <input type="text" name="transId" class="form-control" readonly="true">
                        </div>
                        <div class="form-group">
                            <label for="" class="form-label">Số Điện Thoại</label>
                            <select name="phone" class="form-control">
                                {{#each phones}}
                                <option value="{{ this.phone }}">{{ this.phone }} - {{ numberFormat this.money }}đ
                                </option>
                                {{/each}}
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-gray" data-dismiss="modal">Đóng</button>
                        <button class="btn btn-primary">Thực Hiện</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>
{{> footer }}
<script type="text/javascript">
    $(document).ready(function () {
        let isSelect = (options, value) => options.split('\n').map((v) => !RegExp(`value="${value}"`).test(v) ? v : v.replace(`value="${value}"`, `value="${value}"` + ' selected')).join('\n');
        let listStatus = [
            {
                name: 'Đợi Xử Lý',
                value: 'wait'
            },
            {
                name: 'Chuyển Tiền',
                value: 'transfer'
            },
            {
                name: 'Rút Tiền',
                value: 'recharge'
            },
            {
                name: 'Sai Nội Dung',
                value: 'errorComment'
            },
            {
                name: 'Giới Hạn Hoàn',
                value: 'limitRefund'
            },
            {
                name: 'Sai Hạn Mức',
                value: 'limitBet'
            },
            {
                name: 'Đã Hoàn Tiền',
                value: 'refund'
            },
            {
                name: 'Đợi Trả Thưởng',
                value: 'waitReward'
            },
            {
                name: 'Đợi Hoàn Tiền',
                value: 'waitRefund'
            },
            {
                name: 'Thắng Cược',
                value: 'win'
            },
            {
                name: 'Thua Cược',
                value: 'won'
            },
            {
                name: 'Không Đủ Tiền',
                value: 'errorMoney'
            },
            {
                name: 'Giới Hạn Số',
                value: 'limitPhone'
            },
            {
                name: 'Lỗi Số',
                value: 'errorPhone'
            },
            {
                name: 'Đã Chặn Số',
                value: 'phoneBlock'
            }

        ];

        $('body').on('click', '.action-history', function (e) {
            let _this = $(this);
            let id = _this.data('id');
            let _id = _this.parent().parent().data('_id');
            let action = _this.data('action');
            switch (action) {
                case 'edit':
                    _this.parent().parent().find('td').each(function (e) {
                        let className = $(this).attr('class');
                        let value = $(this).text();
                        if (!className) return;

                        switch (className) {
                            case 'phone':
                                $(this).html(`<input type="text" data-old="${value}" name="phone" class="form-control" value="${value}">`);
                                break;
                            case 'comment':
                                $(this).html(`<input type="text" data-old="${value}" name="comment" class="form-control" value="${value}">`);
                                break;
                            case 'status':
                                switch (value) {
                                    case 'Đợi Xử Lý':
                                        value = 'wait';
                                        break;
                                    case 'Chuyển Tiền':
                                        value = 'transfer';
                                        break;
                                    case 'Rút Tiền':
                                        value = 'recharge';
                                        break;
                                    case 'Sai Nội Dung':
                                        value = 'errorComment';
                                        break;
                                    case 'Giới Hạn Hoàn':
                                        value = 'limitRefund';
                                        break;
                                    case 'Sai Hạn Mức':
                                        value = 'limitBet';
                                        break;
                                    case 'Đã Hoàn Tiền':
                                        value = 'refund';
                                        break;
                                    case 'Đợi Trả Thưởng':
                                        value = 'waitReward';
                                        break;
                                    case 'Đợi Hoàn Tiền':
                                        value = 'waitRefund';
                                        break;
                                    case 'Thắng Cược':
                                        value = 'win';
                                        break;
                                    case 'Thua Cược':
                                        value = 'won';
                                        break;
                                    case 'Không Đủ Tiền':
                                        value = 'errorMoney';
                                        break;
                                    case 'Giới Hạn Số':
                                        value = 'limitPhone';
                                        break;
                                    case 'Lỗi Số':
                                        value = 'errorPhone';
                                        break;
                                    case 'Đã Chặn Số':
                                        value = 'phoneBlock';
                                        break;
                                }

                                $(this).html(`<select name="status" data-old="${value}" class="form-control">${listStatus.map((item) => `<option value="${item.value}" ${item.value == value && 'selected'}>${item.name}</option>`)}</select>`);
                                break;
                        }

                    })

                    _this.parent().html(`<span class="badge badge-danger hand action-history" data-action="cancel-edit" data-id="${id}"><i class="fas fa-times"></i></span> <span class="badge badge-success hand action-history" data-action="save-edit" data-id="${id}"><i class="fas fa-save"></i></span>`);

                    break;
                case 'cancel-edit':
                    _this.parent().parent().find('td').each(function (e) {
                        let className = $(this).attr('class');
                        let value = $(this).find(`[name="${className}"]`).data('old');
                        if (!className) return;

                        switch (className) {
                            case 'phone':
                                $(this).html(value);
                                break;
                            case 'comment':
                                $(this).html(`<textarea class="form-control">${value}</textarea>`);
                                break;
                            case 'status':
                                switch (value) {
                                    case 'wait':
                                        value = `<span class="badge badge-info">Đợi Xử Lý</span>`;
                                        break;
                                    case 'transfer':
                                        value = `<span class="badge badge-secondary">Chuyển Tiền</span>`;
                                        break;
                                    case 'recharge':
                                        value = `<span class="badge badge-pink">Rút Tiền</span>`;
                                        break;
                                    case 'errorComment':
                                        value = `<span class="badge badge-warning">Sai Nội Dung</span>`;
                                        break;
                                    case 'limitRefund':
                                        value = `<span class="badge badge-warning">Giới Hạn Hoàn</span>`;
                                        break;
                                    case 'limitBet':
                                        value = `<span class="badge badge-warning">Sai Hạn Mức</span>`;
                                        break;
                                    case 'refund':
                                        value = `<span class="badge badge-danger">Đã Hoàn Tiền</span>`;
                                        break;
                                    case 'waitReward':
                                        value = `<span class="badge badge-warning">Đợi Trả Thưởng</span>`;
                                        break;
                                    case 'waitRefund':
                                        value = `<span class="badge badge-warning">Đợi Hoàn Tiền</span>`;
                                        break;
                                    case 'win':
                                        value = `<span class="badge badge-success">Thắng Cược</span>`;
                                        break;
                                    case 'won':
                                        value = `<span class="badge badge-gray">Thua Cược</span>`;
                                        break;
                                    case 'errorMoney':
                                        value = `<span class="badge badge-warning">Không Đủ Tiền</span>`;
                                        break;
                                    case 'limitPhone':
                                        value = `<span class="badge badge-danger">Giới Hạn Số</span>`;
                                        break;
                                    case 'errorPhone':
                                        value = `<span class="badge badge-danger">Lỗi Số</span>`;
                                        break;
                                    case 'phoneBlock':
                                        value = `<span class="badge badge-secondary">Đã Chặn Số</span>`;
                                        break;
                                }
                                $(this).html(value);
                                break;
                        }
                    })

                    _this.parent().html(`<span class="badge badge-info hand action-history" data-action="edit" data-id="${id}"><i class="fas fa-pen"></i></span> <span class="badge badge-danger hand action-history" data-action="remove" data-id="${id}"><i class="fas fa-trash"></i></span>`);

                    break;
                case 'save-edit':
                    let data = {};
                    _this.parent().parent().find('td').each(function (e) {
                        let className = $(this).attr('class');
                        let value = $(this).find(`[name="${className}"]`);
                        if (!className) return;

                        if (value.val() != value.data('old')) {
                            data[className] = value.val();
                        }

                        value = value.val();

                        switch (className) {
                            case 'phone':
                                $(this).html(value);
                                break;
                            case 'comment':
                                $(this).html(`<textarea class="form-control">${value}</textarea>`);
                                break;
                            case 'status':
                                switch (value) {
                                    case 'wait':
                                        value = `<span class="badge badge-info">Đợi Xử Lý</span>`;
                                        break;
                                    case 'transfer':
                                        value = `<span class="badge badge-secondary">Chuyển Tiền</span>`;
                                        break;
                                    case 'recharge':
                                        value = `<span class="badge badge-pink">Rút Tiền</span>`;
                                        break;
                                    case 'errorComment':
                                        value = `<span class="badge badge-warning">Sai Nội Dung</span>`;
                                        break;
                                    case 'limitRefund':
                                        value = `<span class="badge badge-warning">Giới Hạn Hoàn</span>`;
                                        break;
                                    case 'limitBet':
                                        value = `<span class="badge badge-warning">Sai Hạn Mức</span>`;
                                        break;
                                    case 'refund':
                                        value = `<span class="badge badge-danger">Đã Hoàn Tiền</span>`;
                                        break;
                                    case 'waitReward':
                                        value = `<span class="badge badge-warning">Đợi Trả Thưởng</span>`;
                                        break;
                                    case 'waitRefund':
                                        value = `<span class="badge badge-warning">Đợi Hoàn Tiền</span>`;
                                        break;
                                    case 'win':
                                        value = `<span class="badge badge-success">Thắng Cược</span>`;
                                        break;
                                    case 'won':
                                        value = `<span class="badge badge-gray">Thua Cược</span>`;
                                        break;
                                    case 'errorMoney':
                                        value = `<span class="badge badge-warning">Không Đủ Tiền</span>`;
                                        break;
                                    case 'limitPhone':
                                        value = `<span class="badge badge-danger">Giới Hạn Số</span>`;
                                        break;
                                    case 'errorPhone':
                                        value = `<span class="badge badge-danger">Lỗi Số</span>`;
                                        break;
                                    case 'phoneBlock':
                                        value = `<span class="badge badge-secondary">Đã Chặn Số</span>`;
                                        break;
                                }
                                $(this).html(value);
                                break;
                        }
                    })

                    _this.parent().html(`<span class="badge badge-info hand action-history" data-action="edit" data-id="${id}"><i class="fas fa-pen"></i></span> <span class="badge badge-danger hand action-history" data-action="remove" data-id="${id}"><i class="fas fa-trash"></i></span>`);

                    if (data && Object.keys(data).length) {
                        $.ajax({
                            url: '../adminPanel/history/' + id,
                            method: 'PUT',
                            dataType: 'json',
                            data,
                            beforeSend: () => {
                                _this.prop('disabled', true);
                                _this.html('<i class="fas fa-spinner fa-spin" aria-hidden="true"></i>');
                            },
                            success: (res) => {
                                _this.prop('disabled', false);
                                _this.html('<i class="fas fa-save"></i>');
                                !res.success && Swal.fire('Thông báo', res.message, 'error');
                            }
                        })
                    }

                    break;
                case 'rework':
                    $('#transId').html(`#${_id}`);
                    $('[name="transId"]').val(_id);
                    $('#modalRework').modal('show');
                    break;
                case 'remove':
                    Swal.fire({
                        title: 'Bạn chắc chắn ?',
                        text: "Bạn muốn xóa #" + id,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#868e96',
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '../adminPanel/history/' + id,
                                method: 'DELETE',
                                dataType: 'json',
                                beforeSend: () => {
                                    _this.prop('disabled', true);
                                    _this.html('<i class="fas fa-spinner fa-spin" aria-hidden="true"></i>');
                                },
                                success: (res) => {
                                    _this.prop('disabled', false);
                                    _this.html('<i class="fas fa-trash"></i>');
                                    !res.success ? Swal.fire('Thông báo', res.message, 'error') : Swal.fire('Thông báo', res.message, 'success') && _this.parent().parent().remove();
                                }
                            })
                        }
                    })
                    break;
                case 'remove-all':
                    Swal.fire({
                        title: 'Bạn chắc chắn ?',
                        text: "Bạn muốn xóa tất cả ?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#868e96',
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '../adminPanel/history/all',
                                method: 'DELETE',
                                dataType: 'json',
                                beforeSend: () => {
                                    _this.prop('disabled', true);
                                    _this.html('<i class="fas fa-spinner fa-spin" aria-hidden="true"></i>');
                                },
                                success: (res) => {
                                    _this.prop('disabled', false);
                                    _this.html('<i class="fas fa-trash"></i>');
                                    !res.success ? Swal.fire('Thông báo', res.message, 'error') : Swal.fire('Thông báo', res.message, 'success') && setTimeout(() => window.location.reload(), 1500);
                                }
                            })
                        }
                    })
                    break;
                default:
                    Swal.fire('Thông báo', 'Thao tác không hợp lệ!', 'warning');
                    break;
            }
        })

        $('body').on('dblclick', 'tr.edit-one>td', function (e) {
            let _this = $(this);
            let className = _this.attr('class');
            let value = _this.text();

            if (_this.html().includes('name="saveEdit"')) return;

            switch (className) {
                case 'phone':
                    $(this).html(`<input type="text" data-old="${value}" name="saveEdit" class="form-control mb-3" value="${value}"> <span class="badge badge-danger hand action-one" data-action="cancel-one"><i class="fas fa-times"></i></span>  <span class="badge badge-success hand action-one" data-action="save-one"><i class="fas fa-save"></i></span>`);
                    break;
                case 'comment':
                    $(this).html(`<textarea name="saveEdit" data-old="${value}" class="form-control mb-3">${value}</textarea> <span class="badge badge-danger hand action-one" data-action="cancel-one"><i class="fas fa-times"></i></span>  <span class="badge badge-success hand action-one" data-action="save-one"><i class="fas fa-save"></i></span>`);
                    break;
                case 'status':
                    switch (value) {
                        case 'Đợi Xử Lý':
                            value = 'wait';
                            break;
                        case 'Chuyển Tiền':
                            value = 'transfer';
                            break;
                        case 'Rút Tiền':
                            value = 'recharge';
                            break;
                        case 'Sai Nội Dung':
                            value = 'errorComment';
                            break;
                        case 'Giới Hạn Hoàn':
                            value = 'limitRefund';
                            break;
                        case 'Sai Hạn Mức':
                            value = 'limitBet';
                            break;
                        case 'Đã Hoàn Tiền':
                            value = 'refund';
                            break;
                        case 'Đợi Trả Thưởng':
                            value = 'waitReward';
                            break;
                        case 'Đợi Hoàn Tiền':
                            value = 'waitRefund';
                            break;
                        case 'Thắng Cược':
                            value = 'win';
                            break;
                        case 'Thua Cược':
                            value = 'won';
                            break;
                        case 'Không Đủ Tiền':
                            value = 'errorMoney';
                            break;
                        case 'Giới Hạn Số':
                            value = 'limitPhone';
                            break;
                        case 'Lỗi Số':
                            value = 'errorPhone';
                            break;
                        case 'Đã Chặn Số':
                            value = 'phoneBlock';
                            break;
                    }

                    $(this).html(`<select name="saveEdit" data-old="${value}" class="form-control mb-3">${listStatus.map((item) => `<option value="${item.value}" ${item.value == value && 'selected'}>${item.name}</option>`)}</select> <span class="badge badge-danger hand action-one" data-action="cancel-one"><i class="fas fa-times"></i></span>  <span class="badge badge-success hand action-one" data-action="save-one"><i class="fas fa-save"></i></span>`);
                    break;
            }
        })

        $('body').on('click', '.action-one', function (e) {
            let _this = $(this);
            let action = _this.data('action');
            let className = _this.parent().attr('class');
            let value = _this.parent().find('[name="saveEdit"]');

            if (action == 'save-one' && value.val() != value.data('old')) {
                let id = _this.parent().parent().data('id');
                $.ajax({
                    url: '../adminPanel/history/' + id,
                    method: 'PUT',
                    dataType: 'json',
                    data: {
                        [className]: value.val()
                    },
                    beforeSend: () => {
                        _this.prop('disabled', true);
                        _this.html('<i class="fas fa-spinner fa-spin" aria-hidden="true"></i>');
                    },
                    success: (res) => {
                        _this.prop('disabled', false);
                        _this.html('<i class="fas fa-save"></i>');

                        if (!res.success) return Swal.fire('Thông báo', res.message, 'error');
                    }
                })
            }

            value = action == 'save-one' ? value.val() : value.data('old');

            switch (className) {
                case 'phone':
                    $(this).parent().html(value);
                    break;
                case 'comment':
                    $(this).parent().html(`<textarea class="form-control">${value}</textarea>`);
                    break;
                case 'status':
                    switch (value) {
                        case 'wait':
                            value = `<span class="badge badge-info">Đợi Xử Lý</span>`;
                            break;
                        case 'transfer':
                            value = `<span class="badge badge-secondary">Chuyển Tiền</span>`;
                            break;
                        case 'recharge':
                            value = `<span class="badge badge-pink">Rút Tiền</span>`;
                            break;
                        case 'errorComment':
                            value = `<span class="badge badge-warning">Sai Nội Dung</span>`;
                            break;
                        case 'limitRefund':
                            value = `<span class="badge badge-warning">Giới Hạn Hoàn</span>`;
                            break;
                        case 'limitBet':
                            value = `<span class="badge badge-warning">Sai Hạn Mức</span>`;
                            break;
                        case 'refund':
                            value = `<span class="badge badge-danger">Đã Hoàn Tiền</span>`;
                            break;
                        case 'waitReward':
                            value = `<span class="badge badge-warning">Đợi Trả Thưởng</span>`;
                            break;
                        case 'waitRefund':
                            value = `<span class="badge badge-warning">Đợi Hoàn Tiền</span>`;
                            break;
                        case 'win':
                            value = `<span class="badge badge-success">Thắng Cược</span>`;
                            break;
                        case 'won':
                            value = `<span class="badge badge-gray">Thua Cược</span>`;
                            break;
                        case 'errorMoney':
                            value = `<span class="badge badge-warning">Không Đủ Tiền</span>`;
                            break;
                        case 'limitPhone':
                            value = `<span class="badge badge-danger">Giới Hạn Số</span>`;
                            break;
                        case 'errorPhone':
                            value = `<span class="badge badge-danger">Lỗi Số</span>`;
                            break;
                        case 'phoneBlock':
                            value = `<span class="badge badge-secondary">Đã Chặn Số</span>`;
                            break;
                    }
                    $(this).parent().html(value);
                    break;
            }
        })

        $('#formRework').submit(function (e) {
            e.preventDefault();
            let data = $(this).serialize();

            $.ajax({
                url: '../adminPanel/history',
                method: 'POST',
                dataType: 'json',
                data,
                beforeSend: () => {
                    $('#modalRework button.btn-primary').prop('disabled', true);
                    $('#modalRework button.btn-primary').html('<i class="fas fa-spinner fa-spin" aria-hidden="true"></i>');
                },
                success: (res) => {
                    $('#modalRework button.btn-primary').prop('disabled', false);
                    $('#modalRework button.btn-primary').html('Thêm');
                    !res.success ? Swal.fire('Thông báo', res.message, 'error') : Swal.fire('Thông báo', res.message, 'success') && setTimeout(() => window.location.reload(), 1500);
                }
            })
        })
    
    })
</script>
